// Code generated by goctl. DO NOT EDIT!
// Source: datasets.proto

package datasetsclient

import (
	"context"

	"datasets/rpc/datasets"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DatasetCreateReq  = datasets.DatasetCreateReq
	DatasetCreateResp = datasets.DatasetCreateResp
	DatasetListData   = datasets.DatasetListData
	DatasetListReq    = datasets.DatasetListReq
	DatasetListResp   = datasets.DatasetListResp

	Datasets interface {
		DatasetCreate(ctx context.Context, in *DatasetCreateReq, opts ...grpc.CallOption) (*DatasetCreateResp, error)
		DatasetList(ctx context.Context, in *DatasetListReq, opts ...grpc.CallOption) (*DatasetListResp, error)
	}

	defaultDatasets struct {
		cli zrpc.Client
	}
)

func NewDatasets(cli zrpc.Client) Datasets {
	return &defaultDatasets{
		cli: cli,
	}
}

func (m *defaultDatasets) DatasetCreate(ctx context.Context, in *DatasetCreateReq, opts ...grpc.CallOption) (*DatasetCreateResp, error) {
	client := datasets.NewDatasetsClient(m.cli.Conn())
	return client.DatasetCreate(ctx, in, opts...)
}

func (m *defaultDatasets) DatasetList(ctx context.Context, in *DatasetListReq, opts ...grpc.CallOption) (*DatasetListResp, error) {
	client := datasets.NewDatasetsClient(m.cli.Conn())
	return client.DatasetList(ctx, in, opts...)
}
